uniform sampler2D tDiffuse;
uniform float nightTime;
varying vec2 vUv;

void main() {
  /*vec2 uv = vec2(
    floor(vUv.x * 320. + 0.5) / 320.,
    floor(vUv.y * 180. + 0.5) / 180.
  );*/
  vec4 rgba = texture2D(tDiffuse, vUv);
  
  // float sqrDist = pow((vUv.x - 0.5) * (vUv.x - 0.5) + (vUv.y - 0.5) * (vUv.y - 0.5), 0.9);
  float sqrDist = pow((vUv.x - 0.5) * (vUv.x - 0.5) + (vUv.y - 0.5) * (vUv.y - 0.5), 0.5);
  rgba.r *= 1. - 0.5 * nightTime;
  rgba.b *= 1. + 0.5 * nightTime;
  rgba *= 1. - clamp(0.2 + sqrDist, 0.2, 0.98) * nightTime;

  /*vec4 intensity;
  if(fract(gl_FragCoord.y * (0.5 * 1.5 / 3.0)) > 0.5) intensity = vec4(0);
  else intensity = smoothstep(0.4, 0.8, rgba) + normalize(rgba);
  gl_FragColor = intensity * -0.25 + rgba * 1.1;*/
  
  gl_FragColor = rgba;
}
